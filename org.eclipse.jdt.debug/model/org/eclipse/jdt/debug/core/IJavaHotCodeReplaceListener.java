package org.eclipse.jdt.debug.core;

import org.eclipse.debug.core.DebugException;

/**
 * The results of hot code replace are reported
 * to hot code replace listeners after hot code replace
 * attempts finish.
 * <p>
 * Clients may implement this interface
 * </p>
 * <b>Note:</b> This class/interface is part of an interim API that is still under development and expected to 
 * change significantly before reaching stability. It is being made available at this early stage to solicit feedback 
 * from pioneering adopters on the understanding that any code that uses this API will almost certainly be broken
 * (repeatedly) as the API evolves.
 * </p>
 */
public interface IJavaHotCodeReplaceListener {

	/**
	 * Notifies the listener that a hot code replace
	 * attempt failed.
	 * 
	 * @param exception the exception generated by the hot code replace
	 *  failure if any or <code>null</code> if the hot code replace failed because
	 *  the VM does not support it, not because an exception occurred.
	 */
	public void hotCodeReplaceFailed(IJavaDebugTarget target, DebugException exception);
	
	/**
	 * Notifies the listener that a hot code replace
	 * attempt succeeded.
	 */
	public void hotCodeReplaceSucceeded();	

}

