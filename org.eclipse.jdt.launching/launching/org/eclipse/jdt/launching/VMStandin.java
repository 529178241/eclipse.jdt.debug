package org.eclipse.jdt.launching;import java.io.File;import java.net.URL;/**********************************************************************Copyright (c) 2000, 2002 IBM Corp.  All rights reserved.This file is made available under the terms of the Common Public License v1.0which accompanies this distribution, and is available athttp://www.eclipse.org/legal/cpl-v10.html**********************************************************************//** * A VMInstall class that used for manipulating the set of vm installs * withouth committing early. */public class VMStandin extends AbstractVMInstall {	/**	 * Constructor used when you don't have a 'real. VM.	 */	public VMStandin(IVMInstallType type, String id) {		super(type, id);	}		/**	 * Constructor used when you do have a 'real' VM.	 */	public VMStandin(IVMInstall realVM) {		this (realVM.getVMInstallType(), realVM.getId());		setName(realVM.getName());		setInstallLocation(realVM.getInstallLocation());		setLibraryLocations(realVM.getLibraryLocations());		setJavadocLocation(realVM.getJavadocLocation());	}		public IVMInstall convertToRealVM() {		IVMInstallType vmType= getVMInstallType();		IVMInstall realVM= vmType.findVMInstall(getId());				if (realVM == null) {			realVM= vmType.createVMInstall(getId());		}				realVM.setName(getName());		realVM.setInstallLocation(getInstallLocation());		realVM.setLibraryLocations(getLibraryLocations());		realVM.setJavadocLocation(getJavadocLocation());		return realVM;	}		/**	 * Return true if either the library or javadoc locations differ.  This is useful in	 * conjunction with 'equals()' to determine if two VMStandins fundamentally represent	 * the same VM, but have differences.	 */	public boolean different(VMStandin otherVMStandin) {		LibraryLocation[] libLocs = getLibraryLocations();		if (libLocs != null) {			if (libLocs.equals(otherVMStandin.getLibraryLocations())) {				URL javadocURL = getJavadocLocation();				if (javadocURL != null) {					if (javadocURL.equals(otherVMStandin.getJavadocLocation())) {						return false;					}				}			}		}		return true;	}		/**	 * Two VMStandins are equal if their names, types and install locations are equal.	 * 	 * @see java.lang.Object#equals(Object)	 */	public boolean equals(Object obj) {		if (obj instanceof VMStandin) {			VMStandin otherVMStandin = (VMStandin) obj;			String name = getName();			if (name != null) {				if (name.equals(otherVMStandin.getName())) {					File installLoc = getInstallLocation();					if (installLoc != null) {						if (installLoc.equals(otherVMStandin.getInstallLocation())) {							if (getInstallLocation().equals(otherVMStandin.getInstallLocation())) {								return true;							}						}					}				}			}		}		return false;	}	}