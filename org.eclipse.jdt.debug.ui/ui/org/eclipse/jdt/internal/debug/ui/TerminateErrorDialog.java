/*******************************************************************************
 * Copyright (c) 2000, 2003 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials 
 * are made available under the terms of the Common Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/cpl-v10.html
 * 
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
package org.eclipse.jdt.internal.debug.ui;

import org.eclipse.core.runtime.IStatus;
import org.eclipse.debug.core.DebugException;
import org.eclipse.debug.core.model.ITerminate;
import org.eclipse.jface.dialogs.IDialogConstants;
import org.eclipse.jface.preference.IPreferenceStore;
import org.eclipse.swt.custom.BusyIndicator;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Shell;

/**
 * An error dialog reporting a problem with a terminable
 * element which gives the user the option to continue
 * or terminate the element.
 */
public class TerminateErrorDialog extends ErrorDialogWithToggle {

	protected ITerminate terminable;
	// The ID of the terminate button. Set to the sum of the other possible IDs generated by 
	// this dialog to ensure the ID's uniqueness.
	protected int TERMINATE_ID= IDialogConstants.OK_ID + IDialogConstants.DETAILS_ID + IDialogConstants.CANCEL_ID;

	/**
	 * Creates a new dialog which can terminate the given element.
	 * 
	 * @param terminable the item which can be terminated
	 * @see ErrorDialogWithToggle#ErrorDialogWithToggle(Shell, String, String, IStatus, String, String, IPreferenceStore)
	 */
	public TerminateErrorDialog(Shell parentShell, String dialogTitle, String message, IStatus status, String preferenceKey, String toggleMessage, IPreferenceStore store, ITerminate terminable) {
		super(parentShell, dialogTitle, message, status, preferenceKey, toggleMessage, store);
		this.terminable = terminable;
	}

	/* (non-Javadoc)
	 * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)
	 */
	protected void createButtonsForButtonBar(Composite parent) {
		super.createButtonsForButtonBar(parent);
		getButton(IDialogConstants.OK_ID).setText(DebugUIMessages.getString("TerminateErrorDialog.0")); //$NON-NLS-1$
		createButton(parent, TERMINATE_ID, DebugUIMessages.getString("TerminateErrorDialog.1"), false); //$NON-NLS-1$
	}

	/* (non-Javadoc)
	 * @see org.eclipse.jface.dialogs.Dialog#buttonPressed(int)
	 */
	protected void buttonPressed(int id) {
		if (id == TERMINATE_ID) {
			final DebugException[] ex = new DebugException[1];
			ex[0] = null;
			Runnable r = new Runnable() {
				public void run() {
					try {
						terminable.terminate();
					} catch (DebugException e) {
						ex[0] = e;
					}
				}
			};
			BusyIndicator.showWhile(getShell().getDisplay(), r);
			if (ex[0] != null) {
				JDIDebugUIPlugin.errorDialog(DebugUIMessages.getString("TerminateErrorDialog.2"), ex[0].getStatus()); //$NON-NLS-1$
			}
			okPressed();
		} else {
			super.buttonPressed(id);
		}
	}

}
